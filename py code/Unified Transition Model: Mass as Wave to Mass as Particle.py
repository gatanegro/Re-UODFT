# Step 4: Computing the Unified Mass Transformation Equation

# Define a function to compute the transition of mass from wave to particle perspective
def unified_mass_transition(n, theta, lambda_factor=0.02):
    """Computes the smooth transition from mass as a wave to mass as a particle."""
    return mass_gaps_fractal[n-1] * np.cos(theta) * np.exp(-lambda_factor * n)

# Compute the mass transition curve for different observer angles
mass_transition = [[unified_mass_transition(n, theta) for theta in angles] for n in range(10)]

# Plot the unified mass transition model
plt.figure(figsize=(10, 6))

for n in range(10):
    plt.plot(angle_degrees, mass_transition[n], label=f"n={n+1} Mode")

plt.xlabel("Observer Angle (Degrees)")
plt.ylabel("Unified Perceived Mass (Joules)")
plt.title("Unified Transition Model: Mass as Wave to Mass as Particle")
plt.legend()
plt.grid(True)
plt.show()

# Return computed transition mass values
mass_transition
Result
[[6.153212370493166e-26,
  6.059731248392296e-26,
  5.782128258680994e-26,
  5.328838227727747e-26,
  4.713634143747245e-26,
  3.9552086715229464e-26,
  3.0766061852465833e-26,
  2.1045225768693511e-26,
  1.0684941149337514e-26,
  3.767755916999176e-42],
 [5.6505273021757964e-27,
  5.56468309578988e-27,
  5.309758809403902e-27,
  4.893500188461789e-27,
  4.32855504052384e-27,
  3.63208893803411e-27,
  2.8252636510878986e-27,
  1.932594157755771e-27,
  9.812037688800637e-28,
  3.4599500870521587e-43],
 [1.1254854497446534e-26,
  1.1083867968109665e-26,
  1.0576103719269601e-26,
  9.74698991068624e-27,
  8.621718745881559e-27,
  7.234481019783456e-27,
  5.6274272487232685e-27,
  3.849386948326213e-27,
  1.954384973388047e-27,
  6.891610767583546e-43],
 [1.6733235974450127e-26,
  1.6479020520621274e-26,
  1.5724098367060082e-26,
  1.4491407441393466e-26,
  1.2818402433626099e-26,
  1.0755916754337607e-26,
  8.366617987225065e-27,
  5.723103766283671e-27,
  2.9056959334339874e-27,
  1.0246151937743843e-42],
 [2.2056984402692875e-26,
  2.172188924784129e-26,
  2.072678548000037e-26,
  1.910190882360916e-26,
  1.689663033364485e-26,
  1.4177956281100234e-26,
  1.1028492201346439e-26,
  7.54393296674106e-27,
  3.8301551463555256e-27,
  1.3506007673800461e-42],
 [2.721328041097921e-26,
  2.679984953362758e-26,
  2.5572118789574878e-26,
  2.3567392156217425e-26,
  2.084658223786917e-26,
  1.7492359467102856e-26,
  1.3606640205489608e-26,
  9.307490066524727e-27,
  4.725536551705716e-27,
  1.666332837480253e-42],
 [3.219626762957936e-26,
  3.1707133979665744e-26,
  3.0254595108363935e-26,
  2.788278567425832e-26,
  2.4663771906810705e-26,
  2.069536191044542e-26,
  1.6098133814789683e-26,
  1.1011772069220326e-26,
  5.590823201553238e-27,
  1.9714528048527952e-42],
 [3.70037333967833e-26,
  3.6441563539548954e-26,
  3.4772135214486335e-26,
  3.204617315648097e-26,
  2.8346504343262e-26,
  2.3785541339596302e-26,
  1.8501866698391652e-26,
  1.2656022199952663e-26,
  6.425630871224353e-27,
  2.265825183043634e-42],
 [4.163558604198393e-26,
  4.100304793535264e-26,
  3.9124652965749064e-26,
  3.605747521381087e-26,
  3.189470932346388e-26,
  2.676283882982509e-26,
  2.0817793020991968e-26,
  1.424020910552756e-26,
  7.229943642285195e-27,
  2.5494443588469915e-42],
 [4.6093057007385816e-26,
  4.539279990090723e-26,
  4.3313305539304654e-26,
  3.991775830648045e-26,
  3.530933018687419e-26,
  2.962804593692292e-26,
  2.3046528503692914e-26,
  1.5764753963984324e-26,
  8.003975352430486e-27,
  2.822385736350576e-42]]

