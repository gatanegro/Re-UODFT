# Step 3: Computing Observer-Dependent Mass Perception

# Define observer angles from wave to particle view (0° to 90°)
angles = np.linspace(0, np.pi/2, 10)  # 0 to 90 degrees in radians

# Compute mass perception at different angles using COM scaling
mass_perception = [[mass_gaps_fractal[n] * np.cos(theta) for theta in angles] for n in range(10)]

# Convert angle values to degrees for better readability
angle_degrees = np.degrees(angles)

# Plot observer-dependent mass perception
plt.figure(figsize=(10, 6))

for n in range(10):
    plt.plot(angle_degrees, mass_perception[n], label=f"n={n+1} Mode")

plt.xlabel("Observer Angle (Degrees)")
plt.ylabel("Perceived Mass (Joules)")
plt.title("Observer-Dependent Mass Perception in Collatz-Octave Model")
plt.legend()
plt.grid(True)
plt.show()

# Return computed observer-dependent mass values
mass_perception
Result
[[5.764675525537516e-27,
  5.677097151149071e-27,
  5.417023052572732e-27,
  4.9923554496898984e-27,
  4.41599765272199e-27,
  3.705462001678755e-27,
  2.8823377627687588e-27,
  1.971635149470317e-27,
  1.0010253998507442e-27,
  3.5298457152363027e-43],
 [1.171417382291001e-26,
  1.1536209200934433e-26,
  1.100772269999199e-26,
  1.0144772114986741e-26,
  8.973577762770011e-27,
  7.529725791080956e-27,
  5.857086911455006e-27,
  4.00648340985348e-27,
  2.034144937221983e-27,
  7.1728627384412286e-43],
 [1.7767961499638697e-26,
  1.7498026240066608e-26,
  1.6696422307618606e-26,
  1.5387506032150963e-26,
  1.361104817235017e-26,
  1.1421025501355217e-26,
  8.88398074981935e-27,
  6.077000738711394e-27,
  3.08537413526844e-27,
  1.0879738588952968e-42],
 [2.389404595534546e-26,
  2.3531041707654202e-26,
  2.245305866495751e-26,
  2.0692850796521986e-26,
  1.830390112772189e-26,
  1.5358796685376834e-26,
  1.1947022977672734e-26,
  8.172245022277374e-27,
  4.1491575372356294e-27,
  1.463088344894679e-42],
 [3.0075326095651936e-26,
  2.9618414313368407e-26,
  2.826156199981399e-26,
  2.604599642593563e-26,
  2.3039036430565362e-26,
  1.933204697156731e-26,
  1.503766304782597e-26,
  1.0286367341801104e-26,
  5.222525569248637e-27,
  1.8415825918176503e-42],
 [3.63011903849577e-26,
  3.5749693734678565e-26,
  3.4111960730489116e-26,
  3.1437753060988774e-26,
  2.780832517300093e-26,
  2.3333955396322946e-26,
  1.8150595192478853e-26,
  1.2415738338355626e-26,
  6.3036355574882016e-27,
  2.222806830508856e-42],
 [4.2564424986217976e-26,
  4.1917775728934007e-26,
  3.999747606754437e-26,
  3.686187333554187e-26,
  3.260624123524687e-26,
  2.7359884994573065e-26,
  2.1282212493108994e-26,
  1.4557890734360953e-26,
  7.391234832297512e-27,
  2.6063193408459735e-42],
 [4.8859812840383015e-26,
  4.8117522495934625e-26,
  4.591320557908849e-26,
  4.23138391439248e-26,
  3.742878811820871e-26,
  3.140648230540148e-26,
  2.4429906420191513e-26,
  1.6711040190533156e-26,
  8.4844174608798e-27,
  2.99180067009569e-42],
 [5.518340816860573e-26,
  5.434504820208013e-26,
  5.185544144585561e-26,
  4.779023334141826e-26,
  4.227294317992685e-26,
  3.5471211031054726e-26,
  2.759170408430287e-26,
  1.8873837171025416e-26,
  9.582498265928787e-27,
  3.3790092089862453e-42],
 [6.153212370493166e-26,
  6.059731248392296e-26,
  5.782128258680994e-26,
  5.328838227727747e-26,
  4.713634143747245e-26,
  3.9552086715229464e-26,
  3.0766061852465833e-26,
  2.1045225768693511e-26,
 1.0684941149337514e-26,
  3.767755916999176e-42]]